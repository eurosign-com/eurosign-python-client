# coding: utf-8

"""
    Eurosign

    This is the documentation of the eurosign API, you can download all of our SDK in this page.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: apiteam@eurosign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class Body1(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'file': 'str',
        'expiration_date': 'str',
        'recipients_order': 'bool',
        'recipients': 'str'
    }

    attribute_map = {
        'file': 'file',
        'expiration_date': 'expirationDate',
        'recipients_order': 'recipientsOrder',
        'recipients': 'recipients'
    }

    def __init__(self, file=None, expiration_date=None, recipients_order=None, recipients=None):  # noqa: E501
        """Body1 - a model defined in Swagger"""  # noqa: E501
        self._file = None
        self._expiration_date = None
        self._recipients_order = None
        self._recipients = None
        self.discriminator = None
        if file is not None:
            self.file = file
        if expiration_date is not None:
            self.expiration_date = expiration_date
        if recipients_order is not None:
            self.recipients_order = recipients_order
        if recipients is not None:
            self.recipients = recipients

    @property
    def file(self):
        """Gets the file of this Body1.  # noqa: E501

        The base64 encoded file  # noqa: E501

        :return: The file of this Body1.  # noqa: E501
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this Body1.

        The base64 encoded file  # noqa: E501

        :param file: The file of this Body1.  # noqa: E501
        :type: str
        """

        self._file = file

    @property
    def expiration_date(self):
        """Gets the expiration_date of this Body1.  # noqa: E501

        The signature request expiration date (format Y-m-d H:i:s)  # noqa: E501

        :return: The expiration_date of this Body1.  # noqa: E501
        :rtype: str
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this Body1.

        The signature request expiration date (format Y-m-d H:i:s)  # noqa: E501

        :param expiration_date: The expiration_date of this Body1.  # noqa: E501
        :type: str
        """

        self._expiration_date = expiration_date

    @property
    def recipients_order(self):
        """Gets the recipients_order of this Body1.  # noqa: E501

        If true, recipients will receive the signature request ordered by their index  # noqa: E501

        :return: The recipients_order of this Body1.  # noqa: E501
        :rtype: bool
        """
        return self._recipients_order

    @recipients_order.setter
    def recipients_order(self, recipients_order):
        """Sets the recipients_order of this Body1.

        If true, recipients will receive the signature request ordered by their index  # noqa: E501

        :param recipients_order: The recipients_order of this Body1.  # noqa: E501
        :type: bool
        """

        self._recipients_order = recipients_order

    @property
    def recipients(self):
        """Gets the recipients of this Body1.  # noqa: E501

         The array containing signature request recipients  # noqa: E501

        :return: The recipients of this Body1.  # noqa: E501
        :rtype: str
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients):
        """Sets the recipients of this Body1.

         The array containing signature request recipients  # noqa: E501

        :param recipients: The recipients of this Body1.  # noqa: E501
        :type: str
        """

        self._recipients = recipients

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Body1, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Body1):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
